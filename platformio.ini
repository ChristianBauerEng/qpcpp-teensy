; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
[platformio]
include_dir = ./include/
src_dir = ./
; lib_dir = ./ports/arm-cm/

[env]
lib_ldf_mode = chain+
platform = teensy
framework = arduino
; dynamically build source-filter depending on whether Q_SPY is defined or not.
extra_scripts = pre:generate_src_filter.py

[env:testBlinky]
 build_flags = 
    -D Q_SPY
    -D Q_UTEST
    -D USB_DUAL_SERIAL

board = teensy41
test_filter = test_Blinky_T4
build_type = debug
targets = test
test_framework = custom
test_build_src = true
monitor_port = COM14
test_port = COM14
upload_protocol = teensy-cli


; debug_test = test_Blinky_T4
; lib_deps = 
;     https://github.com/ftrias/TeensyDebug/archive/refs/heads/master.zip
;build_unflags = -DUSB_SERIAL
; build_flags =
;     -D USB_DUAL_SERIAL

; monitor_filters = time, colorize
; debug_port = \\.\COM15
; debug_tool = custom
; debug_load_mode = manual
; debug_server = 
; debug_init_cmds =
;   target extended-remote $DEBUG_PORT
;   $INIT_BREAK
;   define pio_reset_run_target
;   interrupt
;   tbreak loop
;   continue
;   end
;   define pio_restart_target
;   echo Restart is undefined for now.
;   end

; debug_init_break =