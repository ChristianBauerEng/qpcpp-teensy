#ifndef _CSTDDEF_
#define _CSTDDEF_

//lint -save
//lint -e9093 the name is reserved to the compiler
//lint -e9141 global declaration of symbol 'operator new'
//lint -e9215 unnamed parameter for 'non-virtual' function 'operator new' 

namespace std {
    using ptrdiff_t = unsigned int;
    using size_t = unsigned int;
    using max_align_t = unsigned int;
    using nullptr_t = decltype(nullptr);

    enum class byte : unsigned char {};

    // byte type operations
    template<class IntType>
        constexpr byte& operator<<=(byte& b, IntType shift) noexcept;
    template<class IntType>
        constexpr byte operator<<(byte b, IntType shift) noexcept;
    template<class IntType>
        constexpr byte& operator>>=(byte& b, IntType shift) noexcept;
    template<class IntType>
        constexpr byte operator>>(byte b, IntType shift) noexcept;
    constexpr byte& operator|=(byte& l, byte r) noexcept;
    constexpr byte operator|(byte l, byte r) noexcept;
    constexpr byte& operator&=(byte& l, byte r) noexcept;
    constexpr byte operator&(byte l, byte r) noexcept;
    constexpr byte& operator^=(byte& l, byte r) noexcept;
    constexpr byte operator^(byte l, byte r) noexcept;
    constexpr byte operator~(byte b) noexcept;
    template<class IntType>
        constexpr IntType to_integer(byte b) noexcept;
}

#define NULL  nullptr
//#define offsetof(type, member) ...

//lint -restore

#endif // _CSTDDEF_